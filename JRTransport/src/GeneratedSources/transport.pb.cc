// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transport.proto

#include "JRTransport/transport.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_transport_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ID;
}  // namespace protobuf_transport_2eproto
namespace jrtransport {
class IDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ID>
      _instance;
} _ID_default_instance_;
class PingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PingRequest>
      _instance;
} _PingRequest_default_instance_;
class PongResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PongResponse>
      _instance;
} _PongResponse_default_instance_;
class AuthRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRequest>
      _instance;
} _AuthRequest_default_instance_;
class AuthResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthResponse>
      _instance;
} _AuthResponse_default_instance_;
}  // namespace jrtransport
namespace protobuf_transport_2eproto {
static void InitDefaultsID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jrtransport::_ID_default_instance_;
    new (ptr) ::jrtransport::ID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jrtransport::ID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsID}, {}};

static void InitDefaultsPingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jrtransport::_PingRequest_default_instance_;
    new (ptr) ::jrtransport::PingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jrtransport::PingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPingRequest}, {
      &protobuf_transport_2eproto::scc_info_ID.base,}};

static void InitDefaultsPongResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jrtransport::_PongResponse_default_instance_;
    new (ptr) ::jrtransport::PongResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jrtransport::PongResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PongResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPongResponse}, {
      &protobuf_transport_2eproto::scc_info_ID.base,}};

static void InitDefaultsAuthRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jrtransport::_AuthRequest_default_instance_;
    new (ptr) ::jrtransport::AuthRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jrtransport::AuthRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AuthRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAuthRequest}, {
      &protobuf_transport_2eproto::scc_info_ID.base,}};

static void InitDefaultsAuthResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jrtransport::_AuthResponse_default_instance_;
    new (ptr) ::jrtransport::AuthResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jrtransport::AuthResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AuthResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAuthResponse}, {
      &protobuf_transport_2eproto::scc_info_ID.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PongResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthResponse.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::ID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::ID, infohash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::ID, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::ID, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::PingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::PingRequest, source_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::PongResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::PongResponse, destination_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::AuthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::AuthRequest, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::AuthRequest, secret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::AuthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::AuthResponse, destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::AuthResponse, success_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::jrtransport::ID)},
  { 8, -1, sizeof(::jrtransport::PingRequest)},
  { 14, -1, sizeof(::jrtransport::PongResponse)},
  { 20, -1, sizeof(::jrtransport::AuthRequest)},
  { 27, -1, sizeof(::jrtransport::AuthResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::jrtransport::_ID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::jrtransport::_PingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::jrtransport::_PongResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::jrtransport::_AuthRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::jrtransport::_AuthResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "transport.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017transport.proto\022\013jrtransport\"5\n\002ID\022\020\n\010"
      "InfoHash\030\001 \001(\t\022\017\n\007Address\030\002 \001(\t\022\014\n\004Port\030"
      "\003 \001(\t\".\n\013PingRequest\022\037\n\006source\030\001 \001(\0132\017.j"
      "rtransport.ID\"4\n\014PongResponse\022$\n\013destina"
      "tion\030\001 \001(\0132\017.jrtransport.ID\">\n\013AuthReque"
      "st\022\037\n\006source\030\001 \001(\0132\017.jrtransport.ID\022\016\n\006s"
      "ecret\030\002 \001(\t\"E\n\014AuthResponse\022$\n\013destinati"
      "on\030\001 \001(\0132\017.jrtransport.ID\022\017\n\007success\030\002 \001"
      "(\0102\222\001\n\022JRTransportService\022=\n\004Ping\022\030.jrtr"
      "ansport.PingRequest\032\031.jrtransport.PongRe"
      "sponse\"\000\022=\n\004Auth\022\030.jrtransport.AuthReque"
      "st\032\031.jrtransport.AuthResponse\"\000B\006\200\001\000\370\001\000b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 487);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "transport.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_transport_2eproto
namespace jrtransport {

// ===================================================================

void ID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ID::kInfoHashFieldNumber;
const int ID::kAddressFieldNumber;
const int ID::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ID::ID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_ID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:jrtransport.ID)
}
ID::ID(const ID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  infohash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.infohash().size() > 0) {
    infohash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.infohash_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  port_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.port().size() > 0) {
    port_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_);
  }
  // @@protoc_insertion_point(copy_constructor:jrtransport.ID)
}

void ID::SharedCtor() {
  infohash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ID::~ID() {
  // @@protoc_insertion_point(destructor:jrtransport.ID)
  SharedDtor();
}

void ID::SharedDtor() {
  infohash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ID::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ID& ID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_ID.base);
  return *internal_default_instance();
}


void ID::Clear() {
// @@protoc_insertion_point(message_clear_start:jrtransport.ID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infohash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jrtransport.ID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string InfoHash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_infohash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->infohash().data(), static_cast<int>(this->infohash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "jrtransport.ID.InfoHash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "jrtransport.ID.Address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_port()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->port().data(), static_cast<int>(this->port().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "jrtransport.ID.Port"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jrtransport.ID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jrtransport.ID)
  return false;
#undef DO_
}

void ID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jrtransport.ID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string InfoHash = 1;
  if (this->infohash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->infohash().data(), static_cast<int>(this->infohash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jrtransport.ID.InfoHash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->infohash(), output);
  }

  // string Address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jrtransport.ID.Address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->address(), output);
  }

  // string Port = 3;
  if (this->port().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->port().data(), static_cast<int>(this->port().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jrtransport.ID.Port");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:jrtransport.ID)
}

::google::protobuf::uint8* ID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:jrtransport.ID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string InfoHash = 1;
  if (this->infohash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->infohash().data(), static_cast<int>(this->infohash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jrtransport.ID.InfoHash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->infohash(), target);
  }

  // string Address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jrtransport.ID.Address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->address(), target);
  }

  // string Port = 3;
  if (this->port().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->port().data(), static_cast<int>(this->port().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jrtransport.ID.Port");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jrtransport.ID)
  return target;
}

size_t ID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jrtransport.ID)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string InfoHash = 1;
  if (this->infohash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->infohash());
  }

  // string Address = 2;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string Port = 3;
  if (this->port().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jrtransport.ID)
  GOOGLE_DCHECK_NE(&from, this);
  const ID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jrtransport.ID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jrtransport.ID)
    MergeFrom(*source);
  }
}

void ID::MergeFrom(const ID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jrtransport.ID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.infohash().size() > 0) {

    infohash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.infohash_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.port().size() > 0) {

    port_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_);
  }
}

void ID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jrtransport.ID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ID::CopyFrom(const ID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jrtransport.ID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ID::IsInitialized() const {
  return true;
}

void ID::Swap(ID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ID::InternalSwap(ID* other) {
  using std::swap;
  infohash_.Swap(&other->infohash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  port_.Swap(&other->port_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ID::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PingRequest::InitAsDefaultInstance() {
  ::jrtransport::_PingRequest_default_instance_._instance.get_mutable()->source_ = const_cast< ::jrtransport::ID*>(
      ::jrtransport::ID::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PingRequest::kSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingRequest::PingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_PingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:jrtransport.PingRequest)
}
PingRequest::PingRequest(const PingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source()) {
    source_ = new ::jrtransport::ID(*from.source_);
  } else {
    source_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:jrtransport.PingRequest)
}

void PingRequest::SharedCtor() {
  source_ = NULL;
}

PingRequest::~PingRequest() {
  // @@protoc_insertion_point(destructor:jrtransport.PingRequest)
  SharedDtor();
}

void PingRequest::SharedDtor() {
  if (this != internal_default_instance()) delete source_;
}

void PingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PingRequest::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PingRequest& PingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_PingRequest.base);
  return *internal_default_instance();
}


void PingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:jrtransport.PingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
  _internal_metadata_.Clear();
}

bool PingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jrtransport.PingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .jrtransport.ID source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jrtransport.PingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jrtransport.PingRequest)
  return false;
#undef DO_
}

void PingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jrtransport.PingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jrtransport.ID source = 1;
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_source(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:jrtransport.PingRequest)
}

::google::protobuf::uint8* PingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:jrtransport.PingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jrtransport.ID source = 1;
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_source(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jrtransport.PingRequest)
  return target;
}

size_t PingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jrtransport.PingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .jrtransport.ID source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jrtransport.PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jrtransport.PingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jrtransport.PingRequest)
    MergeFrom(*source);
  }
}

void PingRequest::MergeFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jrtransport.PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source()) {
    mutable_source()->::jrtransport::ID::MergeFrom(from.source());
  }
}

void PingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jrtransport.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingRequest::CopyFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jrtransport.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingRequest::IsInitialized() const {
  return true;
}

void PingRequest::Swap(PingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingRequest::InternalSwap(PingRequest* other) {
  using std::swap;
  swap(source_, other->source_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PingRequest::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PongResponse::InitAsDefaultInstance() {
  ::jrtransport::_PongResponse_default_instance_._instance.get_mutable()->destination_ = const_cast< ::jrtransport::ID*>(
      ::jrtransport::ID::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PongResponse::kDestinationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PongResponse::PongResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_PongResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:jrtransport.PongResponse)
}
PongResponse::PongResponse(const PongResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_destination()) {
    destination_ = new ::jrtransport::ID(*from.destination_);
  } else {
    destination_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:jrtransport.PongResponse)
}

void PongResponse::SharedCtor() {
  destination_ = NULL;
}

PongResponse::~PongResponse() {
  // @@protoc_insertion_point(destructor:jrtransport.PongResponse)
  SharedDtor();
}

void PongResponse::SharedDtor() {
  if (this != internal_default_instance()) delete destination_;
}

void PongResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PongResponse::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PongResponse& PongResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_PongResponse.base);
  return *internal_default_instance();
}


void PongResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:jrtransport.PongResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && destination_ != NULL) {
    delete destination_;
  }
  destination_ = NULL;
  _internal_metadata_.Clear();
}

bool PongResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jrtransport.PongResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .jrtransport.ID destination = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jrtransport.PongResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jrtransport.PongResponse)
  return false;
#undef DO_
}

void PongResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jrtransport.PongResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jrtransport.ID destination = 1;
  if (this->has_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_destination(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:jrtransport.PongResponse)
}

::google::protobuf::uint8* PongResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:jrtransport.PongResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jrtransport.ID destination = 1;
  if (this->has_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_destination(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jrtransport.PongResponse)
  return target;
}

size_t PongResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jrtransport.PongResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .jrtransport.ID destination = 1;
  if (this->has_destination()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *destination_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PongResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jrtransport.PongResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PongResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PongResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jrtransport.PongResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jrtransport.PongResponse)
    MergeFrom(*source);
  }
}

void PongResponse::MergeFrom(const PongResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jrtransport.PongResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_destination()) {
    mutable_destination()->::jrtransport::ID::MergeFrom(from.destination());
  }
}

void PongResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jrtransport.PongResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PongResponse::CopyFrom(const PongResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jrtransport.PongResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PongResponse::IsInitialized() const {
  return true;
}

void PongResponse::Swap(PongResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PongResponse::InternalSwap(PongResponse* other) {
  using std::swap;
  swap(destination_, other->destination_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PongResponse::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthRequest::InitAsDefaultInstance() {
  ::jrtransport::_AuthRequest_default_instance_._instance.get_mutable()->source_ = const_cast< ::jrtransport::ID*>(
      ::jrtransport::ID::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRequest::kSourceFieldNumber;
const int AuthRequest::kSecretFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRequest::AuthRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_AuthRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:jrtransport.AuthRequest)
}
AuthRequest::AuthRequest(const AuthRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secret().size() > 0) {
    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_source()) {
    source_ = new ::jrtransport::ID(*from.source_);
  } else {
    source_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:jrtransport.AuthRequest)
}

void AuthRequest::SharedCtor() {
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_ = NULL;
}

AuthRequest::~AuthRequest() {
  // @@protoc_insertion_point(destructor:jrtransport.AuthRequest)
  SharedDtor();
}

void AuthRequest::SharedDtor() {
  secret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete source_;
}

void AuthRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AuthRequest::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthRequest& AuthRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_AuthRequest.base);
  return *internal_default_instance();
}


void AuthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:jrtransport.AuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jrtransport.AuthRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .jrtransport.ID source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string secret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secret()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secret().data(), static_cast<int>(this->secret().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "jrtransport.AuthRequest.secret"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jrtransport.AuthRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jrtransport.AuthRequest)
  return false;
#undef DO_
}

void AuthRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jrtransport.AuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jrtransport.ID source = 1;
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_source(), output);
  }

  // string secret = 2;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jrtransport.AuthRequest.secret");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->secret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:jrtransport.AuthRequest)
}

::google::protobuf::uint8* AuthRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:jrtransport.AuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jrtransport.ID source = 1;
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_source(), deterministic, target);
  }

  // string secret = 2;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jrtransport.AuthRequest.secret");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->secret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jrtransport.AuthRequest)
  return target;
}

size_t AuthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jrtransport.AuthRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string secret = 2;
  if (this->secret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->secret());
  }

  // .jrtransport.ID source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jrtransport.AuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jrtransport.AuthRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jrtransport.AuthRequest)
    MergeFrom(*source);
  }
}

void AuthRequest::MergeFrom(const AuthRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jrtransport.AuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.secret().size() > 0) {

    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_source()) {
    mutable_source()->::jrtransport::ID::MergeFrom(from.source());
  }
}

void AuthRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jrtransport.AuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRequest::CopyFrom(const AuthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jrtransport.AuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRequest::IsInitialized() const {
  return true;
}

void AuthRequest::Swap(AuthRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRequest::InternalSwap(AuthRequest* other) {
  using std::swap;
  secret_.Swap(&other->secret_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(source_, other->source_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AuthRequest::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthResponse::InitAsDefaultInstance() {
  ::jrtransport::_AuthResponse_default_instance_._instance.get_mutable()->destination_ = const_cast< ::jrtransport::ID*>(
      ::jrtransport::ID::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthResponse::kDestinationFieldNumber;
const int AuthResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthResponse::AuthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_AuthResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:jrtransport.AuthResponse)
}
AuthResponse::AuthResponse(const AuthResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_destination()) {
    destination_ = new ::jrtransport::ID(*from.destination_);
  } else {
    destination_ = NULL;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:jrtransport.AuthResponse)
}

void AuthResponse::SharedCtor() {
  ::memset(&destination_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&destination_)) + sizeof(success_));
}

AuthResponse::~AuthResponse() {
  // @@protoc_insertion_point(destructor:jrtransport.AuthResponse)
  SharedDtor();
}

void AuthResponse::SharedDtor() {
  if (this != internal_default_instance()) delete destination_;
}

void AuthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AuthResponse::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthResponse& AuthResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_AuthResponse.base);
  return *internal_default_instance();
}


void AuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:jrtransport.AuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && destination_ != NULL) {
    delete destination_;
  }
  destination_ = NULL;
  success_ = false;
  _internal_metadata_.Clear();
}

bool AuthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jrtransport.AuthResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .jrtransport.ID destination = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jrtransport.AuthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jrtransport.AuthResponse)
  return false;
#undef DO_
}

void AuthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jrtransport.AuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jrtransport.ID destination = 1;
  if (this->has_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_destination(), output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:jrtransport.AuthResponse)
}

::google::protobuf::uint8* AuthResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:jrtransport.AuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jrtransport.ID destination = 1;
  if (this->has_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_destination(), deterministic, target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jrtransport.AuthResponse)
  return target;
}

size_t AuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jrtransport.AuthResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .jrtransport.ID destination = 1;
  if (this->has_destination()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *destination_);
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jrtransport.AuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jrtransport.AuthResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jrtransport.AuthResponse)
    MergeFrom(*source);
  }
}

void AuthResponse::MergeFrom(const AuthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jrtransport.AuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_destination()) {
    mutable_destination()->::jrtransport::ID::MergeFrom(from.destination());
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void AuthResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jrtransport.AuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthResponse::CopyFrom(const AuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jrtransport.AuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthResponse::IsInitialized() const {
  return true;
}

void AuthResponse::Swap(AuthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthResponse::InternalSwap(AuthResponse* other) {
  using std::swap;
  swap(destination_, other->destination_);
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AuthResponse::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace jrtransport
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::jrtransport::ID* Arena::CreateMaybeMessage< ::jrtransport::ID >(Arena* arena) {
  return Arena::CreateInternal< ::jrtransport::ID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::jrtransport::PingRequest* Arena::CreateMaybeMessage< ::jrtransport::PingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::jrtransport::PingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::jrtransport::PongResponse* Arena::CreateMaybeMessage< ::jrtransport::PongResponse >(Arena* arena) {
  return Arena::CreateInternal< ::jrtransport::PongResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::jrtransport::AuthRequest* Arena::CreateMaybeMessage< ::jrtransport::AuthRequest >(Arena* arena) {
  return Arena::CreateInternal< ::jrtransport::AuthRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::jrtransport::AuthResponse* Arena::CreateMaybeMessage< ::jrtransport::AuthResponse >(Arena* arena) {
  return Arena::CreateInternal< ::jrtransport::AuthResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
