// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transport.proto

#include "../include/JRTransport/transport.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_transport_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InfoHash;
}  // namespace protobuf_transport_2eproto
namespace jrtransport {
class InfoHashDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InfoHash>
      _instance;
} _InfoHash_default_instance_;
class PingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PingRequest>
      _instance;
} _PingRequest_default_instance_;
class PongResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PongResponse>
      _instance;
} _PongResponse_default_instance_;
}  // namespace jrtransport
namespace protobuf_transport_2eproto {
static void InitDefaultsInfoHash() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jrtransport::_InfoHash_default_instance_;
    new (ptr) ::jrtransport::InfoHash();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jrtransport::InfoHash::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InfoHash =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInfoHash}, {}};

static void InitDefaultsPingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jrtransport::_PingRequest_default_instance_;
    new (ptr) ::jrtransport::PingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jrtransport::PingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPingRequest}, {
      &protobuf_transport_2eproto::scc_info_InfoHash.base,}};

static void InitDefaultsPongResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jrtransport::_PongResponse_default_instance_;
    new (ptr) ::jrtransport::PongResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::jrtransport::PongResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PongResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPongResponse}, {
      &protobuf_transport_2eproto::scc_info_InfoHash.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_InfoHash.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PongResponse.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::InfoHash, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::InfoHash, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::InfoHash, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::InfoHash, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::InfoHash, kbucketsize_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::PingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::PingRequest, source_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::PongResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::jrtransport::PongResponse, destination_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::jrtransport::InfoHash)},
  { 9, -1, sizeof(::jrtransport::PingRequest)},
  { 15, -1, sizeof(::jrtransport::PongResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::jrtransport::_InfoHash_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::jrtransport::_PingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::jrtransport::_PongResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "transport.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017transport.proto\022\013jrtransport\"J\n\010InfoHa"
      "sh\022\n\n\002ID\030\001 \001(\t\022\017\n\007Address\030\002 \001(\t\022\014\n\004Port\030"
      "\003 \001(\t\022\023\n\013kBucketSize\030\004 \001(\t\"4\n\013PingReques"
      "t\022%\n\006source\030\001 \001(\0132\025.jrtransport.InfoHash"
      "\":\n\014PongResponse\022*\n\013destination\030\001 \001(\0132\025."
      "jrtransport.InfoHash2L\n\013JRTransport\022=\n\004P"
      "ing\022\030.jrtransport.PingRequest\032\031.jrtransp"
      "ort.PongResponse\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 306);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "transport.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_transport_2eproto
namespace jrtransport {

// ===================================================================

void InfoHash::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoHash::kIDFieldNumber;
const int InfoHash::kAddressFieldNumber;
const int InfoHash::kPortFieldNumber;
const int InfoHash::kKBucketSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoHash::InfoHash()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_InfoHash.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:jrtransport.InfoHash)
}
InfoHash::InfoHash(const InfoHash& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  port_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.port().size() > 0) {
    port_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_);
  }
  kbucketsize_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kbucketsize().size() > 0) {
    kbucketsize_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kbucketsize_);
  }
  // @@protoc_insertion_point(copy_constructor:jrtransport.InfoHash)
}

void InfoHash::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kbucketsize_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InfoHash::~InfoHash() {
  // @@protoc_insertion_point(destructor:jrtransport.InfoHash)
  SharedDtor();
}

void InfoHash::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kbucketsize_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoHash::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InfoHash::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InfoHash& InfoHash::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_InfoHash.base);
  return *internal_default_instance();
}


void InfoHash::Clear() {
// @@protoc_insertion_point(message_clear_start:jrtransport.InfoHash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kbucketsize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool InfoHash::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jrtransport.InfoHash)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "jrtransport.InfoHash.ID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "jrtransport.InfoHash.Address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_port()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->port().data(), static_cast<int>(this->port().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "jrtransport.InfoHash.Port"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string kBucketSize = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kbucketsize()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kbucketsize().data(), static_cast<int>(this->kbucketsize().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "jrtransport.InfoHash.kBucketSize"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jrtransport.InfoHash)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jrtransport.InfoHash)
  return false;
#undef DO_
}

void InfoHash::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jrtransport.InfoHash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ID = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jrtransport.InfoHash.ID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string Address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jrtransport.InfoHash.Address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->address(), output);
  }

  // string Port = 3;
  if (this->port().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->port().data(), static_cast<int>(this->port().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jrtransport.InfoHash.Port");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->port(), output);
  }

  // string kBucketSize = 4;
  if (this->kbucketsize().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kbucketsize().data(), static_cast<int>(this->kbucketsize().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jrtransport.InfoHash.kBucketSize");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->kbucketsize(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:jrtransport.InfoHash)
}

::google::protobuf::uint8* InfoHash::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:jrtransport.InfoHash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ID = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jrtransport.InfoHash.ID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string Address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jrtransport.InfoHash.Address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->address(), target);
  }

  // string Port = 3;
  if (this->port().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->port().data(), static_cast<int>(this->port().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jrtransport.InfoHash.Port");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->port(), target);
  }

  // string kBucketSize = 4;
  if (this->kbucketsize().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kbucketsize().data(), static_cast<int>(this->kbucketsize().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jrtransport.InfoHash.kBucketSize");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->kbucketsize(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jrtransport.InfoHash)
  return target;
}

size_t InfoHash::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jrtransport.InfoHash)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ID = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string Address = 2;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string Port = 3;
  if (this->port().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->port());
  }

  // string kBucketSize = 4;
  if (this->kbucketsize().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kbucketsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InfoHash::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jrtransport.InfoHash)
  GOOGLE_DCHECK_NE(&from, this);
  const InfoHash* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoHash>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jrtransport.InfoHash)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jrtransport.InfoHash)
    MergeFrom(*source);
  }
}

void InfoHash::MergeFrom(const InfoHash& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jrtransport.InfoHash)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.port().size() > 0) {

    port_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_);
  }
  if (from.kbucketsize().size() > 0) {

    kbucketsize_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kbucketsize_);
  }
}

void InfoHash::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jrtransport.InfoHash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoHash::CopyFrom(const InfoHash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jrtransport.InfoHash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoHash::IsInitialized() const {
  return true;
}

void InfoHash::Swap(InfoHash* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoHash::InternalSwap(InfoHash* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  port_.Swap(&other->port_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  kbucketsize_.Swap(&other->kbucketsize_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InfoHash::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PingRequest::InitAsDefaultInstance() {
  ::jrtransport::_PingRequest_default_instance_._instance.get_mutable()->source_ = const_cast< ::jrtransport::InfoHash*>(
      ::jrtransport::InfoHash::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PingRequest::kSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingRequest::PingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_PingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:jrtransport.PingRequest)
}
PingRequest::PingRequest(const PingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source()) {
    source_ = new ::jrtransport::InfoHash(*from.source_);
  } else {
    source_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:jrtransport.PingRequest)
}

void PingRequest::SharedCtor() {
  source_ = NULL;
}

PingRequest::~PingRequest() {
  // @@protoc_insertion_point(destructor:jrtransport.PingRequest)
  SharedDtor();
}

void PingRequest::SharedDtor() {
  if (this != internal_default_instance()) delete source_;
}

void PingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PingRequest::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PingRequest& PingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_PingRequest.base);
  return *internal_default_instance();
}


void PingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:jrtransport.PingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
  _internal_metadata_.Clear();
}

bool PingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jrtransport.PingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .jrtransport.InfoHash source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jrtransport.PingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jrtransport.PingRequest)
  return false;
#undef DO_
}

void PingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jrtransport.PingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jrtransport.InfoHash source = 1;
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_source(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:jrtransport.PingRequest)
}

::google::protobuf::uint8* PingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:jrtransport.PingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jrtransport.InfoHash source = 1;
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_source(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jrtransport.PingRequest)
  return target;
}

size_t PingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jrtransport.PingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .jrtransport.InfoHash source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jrtransport.PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jrtransport.PingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jrtransport.PingRequest)
    MergeFrom(*source);
  }
}

void PingRequest::MergeFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jrtransport.PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source()) {
    mutable_source()->::jrtransport::InfoHash::MergeFrom(from.source());
  }
}

void PingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jrtransport.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingRequest::CopyFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jrtransport.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingRequest::IsInitialized() const {
  return true;
}

void PingRequest::Swap(PingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingRequest::InternalSwap(PingRequest* other) {
  using std::swap;
  swap(source_, other->source_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PingRequest::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PongResponse::InitAsDefaultInstance() {
  ::jrtransport::_PongResponse_default_instance_._instance.get_mutable()->destination_ = const_cast< ::jrtransport::InfoHash*>(
      ::jrtransport::InfoHash::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PongResponse::kDestinationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PongResponse::PongResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_PongResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:jrtransport.PongResponse)
}
PongResponse::PongResponse(const PongResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_destination()) {
    destination_ = new ::jrtransport::InfoHash(*from.destination_);
  } else {
    destination_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:jrtransport.PongResponse)
}

void PongResponse::SharedCtor() {
  destination_ = NULL;
}

PongResponse::~PongResponse() {
  // @@protoc_insertion_point(destructor:jrtransport.PongResponse)
  SharedDtor();
}

void PongResponse::SharedDtor() {
  if (this != internal_default_instance()) delete destination_;
}

void PongResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PongResponse::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PongResponse& PongResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_PongResponse.base);
  return *internal_default_instance();
}


void PongResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:jrtransport.PongResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && destination_ != NULL) {
    delete destination_;
  }
  destination_ = NULL;
  _internal_metadata_.Clear();
}

bool PongResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jrtransport.PongResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .jrtransport.InfoHash destination = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jrtransport.PongResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jrtransport.PongResponse)
  return false;
#undef DO_
}

void PongResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jrtransport.PongResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jrtransport.InfoHash destination = 1;
  if (this->has_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_destination(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:jrtransport.PongResponse)
}

::google::protobuf::uint8* PongResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:jrtransport.PongResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jrtransport.InfoHash destination = 1;
  if (this->has_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_destination(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jrtransport.PongResponse)
  return target;
}

size_t PongResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jrtransport.PongResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .jrtransport.InfoHash destination = 1;
  if (this->has_destination()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *destination_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PongResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jrtransport.PongResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PongResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PongResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jrtransport.PongResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jrtransport.PongResponse)
    MergeFrom(*source);
  }
}

void PongResponse::MergeFrom(const PongResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jrtransport.PongResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_destination()) {
    mutable_destination()->::jrtransport::InfoHash::MergeFrom(from.destination());
  }
}

void PongResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jrtransport.PongResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PongResponse::CopyFrom(const PongResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jrtransport.PongResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PongResponse::IsInitialized() const {
  return true;
}

void PongResponse::Swap(PongResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PongResponse::InternalSwap(PongResponse* other) {
  using std::swap;
  swap(destination_, other->destination_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PongResponse::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace jrtransport
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::jrtransport::InfoHash* Arena::CreateMaybeMessage< ::jrtransport::InfoHash >(Arena* arena) {
  return Arena::CreateInternal< ::jrtransport::InfoHash >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::jrtransport::PingRequest* Arena::CreateMaybeMessage< ::jrtransport::PingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::jrtransport::PingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::jrtransport::PongResponse* Arena::CreateMaybeMessage< ::jrtransport::PongResponse >(Arena* arena) {
  return Arena::CreateInternal< ::jrtransport::PongResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
